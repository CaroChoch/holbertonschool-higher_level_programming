The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

 importing function add_integer from module 0-add_integer
 ========================================================

    >>> add_integer = __import__("0-add_integer").add_integer

Now use it:
-----------

=================================
Tests with integers and floats :
=================================

    >>> add_integer(1, 4)
    5

    >>> add_integer(-1, 4)
    3

    >>> add_integer(1, -4)
    -3

    >>> add_integer(-1, -4)
    -5

    >>> add_integer(1)
    99

    >>> add_integer(1.4, 4.1)
    5

    >>> add_integer(-1.4, 4.1)
    3

    >>> add_integer(-1.66532, 4)
    3



=======================================================
Tests with integers or floats with a char or a string :
=======================================================

    >>> add_integer(63, "Caroline")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer("Caroline", 63)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer("Mathieu", "Caroline")
    Traceback (most recent call last):
    TypeError: a must be an integer

===========================
Tests without arguments : 
===========================

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(None, 100)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(None, None)
    Traceback (most recent call last):
    TypeError: a must be an integer

=====================
Test with overflow : 
=====================

    >>> add_integer(float("inf"), 7)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

=====================
Test with Nan number : 
=====================

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(-6, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
